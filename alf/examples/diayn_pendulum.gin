import alf.algorithms.sac_algorithm
import alf.trainers.off_policy_trainer
import alf.algorithms.diayn_algorithm

import alf.environments.multi_goal_wrappers
import alf.utils.multi_modal_encoding_network
import alf.utils.multi_modal_actor_distribution_network
import alf.utils.multi_modal_value_network

# environment config
num_of_goals=5

create_environment.env_load_fn=@suite_gym.load
# provide multi-goal wrappers
suite_gym.load.gym_env_wrappers=(@RandomGoalWrapper,)
RandomGoalWrapper.num_of_goals=%num_of_goals
create_environment.num_parallel_environments=10
create_environment.env_name='Pendulum-v0'

# algorithm config
observation_spec=@get_observation_spec()
action_spec=@get_action_spec()

#actor/ActorDistributionNetwork.input_tensor_spec=%observation_spec
#actor/ActorDistributionNetwork.output_tensor_spec=%action_spec
#actor/ActorDistributionNetwork.fc_layer_params=(256, 256)
#actor/ActorDistributionNetwork.activation_fn=@tf.nn.relu

#value/ValueNetwork.input_tensor_spec=%observation_spec
#value/ValueNetwork.fc_layer_params=(256, 256)
#value/ValueNetwork.activation_fn=@tf.nn.relu


actor/MultiModalActorDistributionNetwork.input_tensor_spec=%observation_spec
actor/MultiModalActorDistributionNetwork.output_tensor_spec=%action_spec
actor/MultiModalActorDistributionNetwork.fc_layer_params_visual=(256, 256)
actor/MultiModalActorDistributionNetwork.fc_layer_params_state=(256, 256)
actor/MultiModalActorDistributionNetwork.fc_layer_params_fusion=(256, 256)
actor/MultiModalActorDistributionNetwork.activation_fn=@tf.nn.relu

actor/MultiModalActorDistributionNetwork.continuous_projection_net=@NormalProjectionNetwork

NormalProjectionNetwork.state_dependent_std=True
NormalProjectionNetwork.mean_transform=None
NormalProjectionNetwork.scale_distribution=True
NormalProjectionNetwork.std_transform=@clipped_exp



critic/MultiModalValueNetwork.input_tensor_spec=%observation_spec
critic/MultiModalValueNetwork.fc_layer_params_visual=(256, 256)
critic/MultiModalValueNetwork.fc_layer_params_state=(256, 256)
critic/MultiModalValueNetwork.fc_layer_params_fusion=(256, 256)
critic/MultiModalValueNetwork.activation_fn=@tf.nn.relu





feature_size=200
#icm/encoding_net_fc_layer_params=(200, %feature_size)
#icm/EncodingNetwork.input_tensor_spec=%observation_spec
#icm/EncodingNetwork.fc_layer_params=%icm/encoding_net_fc_layer_params
#icm/EncodingNetwork.activation_fn=@tf.nn.relu
#icm/TensorSpec.shape=(%feature_size,)


diayn/encoding_net_fc_layer_params=(200, %feature_size)
diayn/MultiModalEncodingNetwork.input_tensor_spec=%observation_spec
diayn/MultiModalEncodingNetwork.fc_layer_params_visual=(256, 256)
diayn/MultiModalEncodingNetwork.fc_layer_params_state=(256, 256)
diayn/MultiModalEncodingNetwork.fc_layer_params_fusion=(256, 256)
diayn/MultiModalEncodingNetwork.activation_fn=@tf.nn.relu
diayn/MultiModalEncodingNetwork.last_layer_size=%feature_size
diayn/TensorSpec.shape=(%feature_size,)



# DIAYNAlgorithm.action_spec=%action_spec
DIAYNAlgorithm.num_of_skills=%num_of_goals
DIAYNAlgorithm.feature_spec=@diayn/TensorSpec()
DIAYNAlgorithm.encoding_net=@diayn/MultiModalEncodingNetwork()
DIAYNAlgorithm.hidden_size=(200, 200)


SacAlgorithm.actor_network=@actor/MultiModalActorDistributionNetwork()
SacAlgorithm.critic_network=@critic/MultiModalValueNetwork()
# SacAlgorithm.actor_optimizer=@actor/Adam()
# SacAlgorithm.critic_optimizer=@critic/Adam()
#SacAlgorithm.alpha_optimizer=@alpha/Adam()
SacAlgorithm.target_update_tau=0.005
OneStepTDLoss.td_error_loss_fn=@losses.element_wise_squared_loss


Agent/Adam.learning_rate=5e-4
Agent.intrinsic_reward_coef=0 #0.1
Agent.extrinsic_reward_coef=1 #0.1
Agent.action_spec = %action_spec
Agent.rl_algorithm_cls=@SacAlgorithm
Agent.intrinsic_curiosity_module=@DIAYNAlgorithm()
Agent.optimizer=@Agent/Adam()



# training config
TrainerConfig.trainer=@sync_off_policy_trainer
TrainerConfig.initial_collect_steps=1000
TrainerConfig.mini_batch_length=2
TrainerConfig.unroll_length=1
TrainerConfig.mini_batch_size=64
TrainerConfig.num_updates_per_train_step=1
TrainerConfig.clear_replay_buffer=False
TrainerConfig.algorithm_ctor=@Agent
TrainerConfig.num_iterations=10000
TrainerConfig.checkpoint_interval=10000
TrainerConfig.evaluate=1
TrainerConfig.eval_interval=500
TrainerConfig.debug_summaries=False
TrainerConfig.summarize_grads_and_vars=0
TrainerConfig.summary_interval=100

ReplayBuffer.max_length=100000


TrainerConfig.use_tf_functions=True
Trainer._create_environment.nonparallel=False

